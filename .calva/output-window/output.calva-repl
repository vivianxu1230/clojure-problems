; This is the Calva evaluation results output window.
; TIPS: The keyboard shortcut `ctrl+alt+c o` shows and focuses this window
;   when connected to a REPL session.
; Please see https://calva.io/output/ for more info.
; Happy coding! ♥️

; Jacking in...
; Starting Jack-in Terminal: lein update-in :dependencies conj '[nrepl,"0.8.3"]' -- update-in :dependencies conj '[clj-kondo,"2020.04.05"]' -- update-in :plugins conj '[cider/cider-nrepl,"0.25.6"]' -- update-in '[:repl-options,:nrepl-middleware]' conj '["cider.nrepl/cider-middleware"]' -- repl :headless
; No nrepl port file found.
; Hooking up nREPL sessions...
; Connected session: clj
; TIPS: 
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
clj꞉clojure-problems.core꞉> 
; Jack-in done.
clj꞉clojure-problems.core꞉> 
#'clojure-problems.core-test/nil-key?
clj꞉clojure-problems.core-test꞉> 
ru; Running all project tests…
; No tests found. 😱, ns: 0, vars: 0
clj꞉clojure-problems.core-test꞉> 
; Evaluating file: core_test.clj
#'clojure-problems.core-test/nil-key-test
clj꞉clojure-problems.core-test꞉> 
; Running all project tests…
; 2 tests finished, all passing 👍, ns: 1, vars: 2
clj꞉clojure-problems.core-test꞉> 
; Evaluating file: core_test.clj
#'clojure-problems.core-test/nil-key-test
clj꞉clojure-problems.core-test꞉> 
; Running all project tests…
; 4 tests finished, all passing 👍, ns: 1, vars: 2
clj꞉clojure-problems.core-test꞉> 
; Evaluating file: core_test.clj
#'clojure-problems.core-test/nil-key-test
clj꞉clojure-problems.core-test꞉> 
; Running all project tests…
; 6 tests finished, all passing 👍, ns: 1, vars: 2
clj꞉clojure-problems.core-test꞉> 
; Evaluating file: core.clj
#'clojure-problems.core/number-of-elements
clj꞉clojure-problems.core꞉> 
; Evaluating file: core_test.clj
#'clojure-problems.core-test/number-of-elements-test
clj꞉clojure-problems.core-test꞉> 
; Evaluating file: core_test.clj
#'clojure-problems.core-test/number-of-elements-test
; Running test: number-of-elements-test…
; 2 tests finished, all passing 👍, ns: 1, vars: 1
clj꞉clojure-problems.core-test꞉> 
; Evaluating file: core.clj
#'clojure-problems.core/number-of-elements
clj꞉clojure-problems.core꞉> 
; Evaluating file: core_test.clj
#'clojure-problems.core-test/number-of-elements-test
clj꞉clojure-problems.core-test꞉> 
; Evaluating file: core_test.clj
#'clojure-problems.core-test/number-of-elements-test
; Running test: thread-last-test…
; FAIL in clojure-problems.core-test/thread-last-test (core_test.clj:7):
; expected:
11
; actual:
((5 2 4))
; FAIL in clojure-problems.core-test/thread-last-test (core_test.clj:8):
; expected:
11
; actual:
((5 2 4))
; 2 tests finished, problems found. 😭 errors: 0, failures: 2, ns: 1, vars: 1
clj꞉clojure-problems.core-test꞉> 
; Evaluating file: core_test.clj
#'clojure-problems.core-test/number-of-elements-test
clj꞉clojure-problems.core-test꞉> 
; Evaluating file: core_test.clj
#'clojure-problems.core-test/number-of-elements-test
; Running test: thread-last-test…
; 2 tests finished, all passing 👍, ns: 1, vars: 1
clj꞉clojure-problems.core-test꞉> 
; Evaluating file: core.clj
#'clojure-problems.core/number-of-elements
clj꞉clojure-problems.core꞉> 
; Evaluating file: core_test.clj
; Syntax error compiling at (test/clojure_problems/core_test.clj:10:3).
; Unable to resolve symbol: recurring-theme in this context
; Evaluation of file core_test.clj failed: class clojure.lang.Compiler$CompilerException

clj꞉clojure-problems.core꞉> 
clj꞉clojure-problems.core-test꞉> 
; Evaluating file: core.clj
#'clojure-problems.core/number-of-elements
clj꞉clojure-problems.core꞉> 
; Evaluating file: core_test.clj
#'clojure-problems.core-test/number-of-elements-test
; Running test: recurring-theme-test…
; 1 tests finished, all passing 👍, ns: 1, vars: 1
clj꞉clojure-problems.core-test꞉> 
; Evaluating file: core.clj
#'clojure-problems.core/number-of-elements
clj꞉clojure-problems.core꞉> 
; Evaluating file: core_test.clj
#'clojure-problems.core-test/number-of-elements-test
clj꞉clojure-problems.core-test꞉> 
; Evaluating file: core_test.clj
#'clojure-problems.core-test/number-of-elements-test
; Running test: thread-first-test…
; FAIL in clojure-problems.core-test/thread-first-test (core_test.clj:7):
; expected:
#function[clojure.core/last--5428]
; actual:
((1 2 3 4 5))
; 2 tests finished, problems found. 😭 errors: 0, failures: 1, ns: 1, vars: 1
clj꞉clojure-problems.core-test꞉> 
; Evaluating file: core_test.clj
#'clojure-problems.core-test/number-of-elements-test
clj꞉clojure-problems.core-test꞉> 
; Evaluating file: core_test.clj
#'clojure-problems.core-test/number-of-elements-test
; Running test: thread-first-test…
; 2 tests finished, all passing 👍, ns: 1, vars: 1
clj꞉clojure-problems.core-test꞉> 
; Evaluating file: core_test.clj
; Syntax error compiling at (test/clojure_problems/core_test.clj:6:3).
; Unable to resolve symbol: simple-recursion in this context
; Evaluation of file core_test.clj failed: class clojure.lang.Compiler$CompilerException

clj꞉clojure-problems.core-test꞉> 
clj꞉clojure-problems.core-test꞉> 
; Evaluating file: core.clj
#'clojure-problems.core/number-of-elements
clj꞉clojure-problems.core꞉> 
; Evaluating file: core.clj
#'clojure-problems.core/number-of-elements
clj꞉clojure-problems.core꞉> 
; Evaluating file: core_test.clj
#'clojure-problems.core-test/number-of-elements-test
; Running test: simple-recursion-test…
; FAIL in clojure-problems.core-test/simple-recursion-test (core_test.clj:6):
; expected:
(5 4 3 2 1)
; actual:
(#function[clojure-problems.core-test/fn--26499/foo--26500])
; 1 tests finished, problems found. 😭 errors: 0, failures: 1, ns: 1, vars: 1
clj꞉clojure-problems.core-test꞉> 
; Evaluating file: core_test.clj
#'clojure-problems.core-test/number-of-elements-test
clj꞉clojure-problems.core-test꞉> 
; Evaluating file: core.clj
#'clojure-problems.core/number-of-elements
clj꞉clojure-problems.core꞉> 
; Evaluating file: core_test.clj
#'clojure-problems.core-test/number-of-elements-test
; Running test: simple-recursion-test…
; 1 tests finished, all passing 👍, ns: 1, vars: 1
clj꞉clojure-problems.core-test꞉> 
; nREPL Connection was closed
